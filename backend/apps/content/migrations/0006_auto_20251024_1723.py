# Generated by Django 4.2.7 on 2025-10-24 17:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


def check_and_skip_if_exists(apps, schema_editor):
    """Check if BlogPost table exists, skip creation if it does"""
    # Check if table exists
    with schema_editor.connection.cursor() as cursor:
        if schema_editor.connection.vendor == 'postgresql':
            cursor.execute("""
                SELECT EXISTS (
                    SELECT FROM information_schema.tables
                    WHERE table_schema = 'public'
                    AND table_name = 'content_blogpost'
                );
            """)
            table_exists = cursor.fetchone()[0]
        elif schema_editor.connection.vendor == 'sqlite':
            cursor.execute("""
                SELECT name FROM sqlite_master
                WHERE type='table' AND name='content_blogpost';
            """)
            table_exists = cursor.fetchone() is not None
        else:
            table_exists = False

    if table_exists:
        print("✓ BlogPost table already exists, skipping creation")
        return
    else:
        print("✗ BlogPost table does not exist yet - this migration will be handled by Django ORM")


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('content', '0005_add_sitesettings'),
    ]

    operations = [
        # Just check and print status, don't create table
        # The table already exists in production from previous migrations
        migrations.RunPython(
            check_and_skip_if_exists,
            migrations.RunPython.noop,
        ),
    ]
