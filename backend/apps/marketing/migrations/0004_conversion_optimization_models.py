# Generated migration for conversion optimization models

from django.db import migrations, models
import django.db.models.deletion
from django.conf import settings
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('marketing', '0003_email_marketing_models'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LandingPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField(blank=True)),
                ('page_type', models.CharField(choices=[('lead_capture', 'Lead Capture'), ('product_showcase', 'Product Showcase'), ('consultation_booking', 'Consultation Booking'), ('webinar_registration', 'Webinar Registration'), ('demo_request', 'Demo Request'), ('free_trial', 'Free Trial'), ('contact_form', 'Contact Form'), ('pricing', 'Pricing Page'), ('thank_you', 'Thank You Page'), ('404_error', '404 Error Page')], max_length=50)),
                ('optimization_goal', models.CharField(choices=[('conversions', 'Maximize Conversions'), ('engagement', 'Maximize Engagement'), ('form_completion', 'Form Completion Rate'), ('time_on_page', 'Time on Page'), ('scroll_depth', 'Scroll Depth'), ('click_through', 'Click Through Rate'), ('email_signup', 'Email Signups'), ('demo_requests', 'Demo Requests')], max_length=50)),
                ('page_structure', models.JSONField(default=dict, help_text='Page layout and components')),
                ('content_blocks', models.JSONField(default=list, help_text='Content blocks configuration')),
                ('design_template', models.CharField(blank=True, max_length=100)),
                ('custom_css', models.TextField(blank=True)),
                ('custom_js', models.TextField(blank=True)),
                ('meta_title', models.CharField(blank=True, max_length=200)),
                ('meta_description', models.TextField(blank=True)),
                ('keywords', models.JSONField(default=list)),
                ('canonical_url', models.URLField(blank=True)),
                ('primary_cta_text', models.CharField(default='Get Started', max_length=100)),
                ('primary_cta_color', models.CharField(default='#3B82F6', max_length=20)),
                ('secondary_cta_text', models.CharField(blank=True, max_length=100)),
                ('form_fields', models.JSONField(default=list, help_text='Form field configurations')),
                ('personalization_rules', models.JSONField(default=dict, help_text='Dynamic content rules')),
                ('audience_segments', models.JSONField(default=list, help_text='Target audience segments')),
                ('dynamic_content', models.JSONField(default=dict, help_text='Dynamic content variations')),
                ('ab_testing_enabled', models.BooleanField(default=False)),
                ('test_variants', models.JSONField(default=list, help_text='A/B test variants')),
                ('mobile_optimized', models.BooleanField(default=True)),
                ('page_speed_score', models.IntegerField(default=0, help_text='Page speed score 1-100')),
                ('loading_strategy', models.CharField(default='lazy', max_length=50)),
                ('tracking_enabled', models.BooleanField(default=True)),
                ('conversion_tracking', models.JSONField(default=dict, help_text='Conversion tracking setup')),
                ('heatmap_enabled', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived'), ('testing', 'A/B Testing')], default='draft', max_length=20)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('views', models.IntegerField(default=0)),
                ('unique_visitors', models.IntegerField(default=0)),
                ('conversions', models.IntegerField(default=0)),
                ('conversion_rate', models.FloatField(default=0.0)),
                ('bounce_rate', models.FloatField(default=0.0)),
                ('avg_time_on_page', models.DurationField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='landing_pages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ConversionFunnel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('funnel_type', models.CharField(choices=[('lead_generation', 'Lead Generation'), ('sales', 'Sales Funnel'), ('onboarding', 'User Onboarding'), ('engagement', 'Engagement Funnel'), ('retention', 'Retention Funnel'), ('upsell', 'Upsell Funnel')], max_length=50)),
                ('description', models.TextField(blank=True)),
                ('steps', models.JSONField(default=list, help_text='Funnel steps configuration')),
                ('step_names', models.JSONField(default=list, help_text='Human-readable step names')),
                ('primary_goal', models.CharField(max_length=100)),
                ('success_events', models.JSONField(default=list, help_text='Events that indicate success')),
                ('time_window', models.IntegerField(default=30, help_text='Analysis time window in days')),
                ('minimum_sample_size', models.IntegerField(default=100)),
                ('total_entries', models.IntegerField(default=0)),
                ('total_completions', models.IntegerField(default=0)),
                ('completion_rate', models.FloatField(default=0.0)),
                ('avg_time_to_complete', models.DurationField(blank=True, null=True)),
                ('biggest_dropoff_step', models.IntegerField(blank=True, null=True)),
                ('dropoff_rate', models.FloatField(default=0.0)),
                ('optimization_suggestions', models.JSONField(default=list)),
                ('last_analyzed', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserJourney',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('journey_type', models.CharField(choices=[('awareness', 'Awareness Journey'), ('consideration', 'Consideration Journey'), ('decision', 'Decision Journey'), ('onboarding', 'Onboarding Journey'), ('retention', 'Retention Journey'), ('advocacy', 'Advocacy Journey')], max_length=50)),
                ('description', models.TextField(blank=True)),
                ('touchpoints', models.JSONField(default=list, help_text='Customer touchpoints')),
                ('stages', models.JSONField(default=list, help_text='Journey stages')),
                ('expected_path', models.JSONField(default=list, help_text='Expected customer path')),
                ('success_criteria', models.JSONField(default=dict)),
                ('conversion_goals', models.JSONField(default=list)),
                ('common_paths', models.JSONField(default=list, help_text='Most common user paths')),
                ('friction_points', models.JSONField(default=list, help_text='Identified friction points')),
                ('optimization_opportunities', models.JSONField(default=list)),
                ('completion_rate', models.FloatField(default=0.0)),
                ('avg_journey_time', models.DurationField(blank=True, null=True)),
                ('abandonment_rate', models.FloatField(default=0.0)),
                ('personalization_rules', models.JSONField(default=dict)),
                ('segment_performance', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PageVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('variant_key', models.CharField(max_length=50)),
                ('traffic_allocation', models.FloatField(default=50.0, help_text='Percentage of traffic')),
                ('content_changes', models.JSONField(default=dict, help_text="What's different in this variant")),
                ('cta_text', models.CharField(blank=True, max_length=100)),
                ('cta_color', models.CharField(blank=True, max_length=20)),
                ('headline', models.CharField(blank=True, max_length=200)),
                ('subheadline', models.CharField(blank=True, max_length=300)),
                ('views', models.IntegerField(default=0)),
                ('conversions', models.IntegerField(default=0)),
                ('conversion_rate', models.FloatField(default=0.0)),
                ('confidence_level', models.FloatField(default=0.0)),
                ('statistical_significance', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_winner', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('landing_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='marketing.landingpage')),
            ],
            options={
                'ordering': ['variant_key'],
            },
        ),
        migrations.CreateModel(
            name='FunnelStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_number', models.IntegerField()),
                ('step_name', models.CharField(max_length=200)),
                ('step_description', models.TextField(blank=True)),
                ('tracking_event', models.CharField(help_text='Event to track for this step', max_length=100)),
                ('required_parameters', models.JSONField(default=dict)),
                ('entries', models.IntegerField(default=0)),
                ('completions', models.IntegerField(default=0)),
                ('completion_rate', models.FloatField(default=0.0)),
                ('avg_time_on_step', models.DurationField(blank=True, null=True)),
                ('dropoff_count', models.IntegerField(default=0)),
                ('dropoff_rate', models.FloatField(default=0.0)),
                ('common_exit_points', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('funnel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='funnel_steps', to='marketing.conversionfunnel')),
            ],
            options={
                'ordering': ['step_number'],
            },
        ),
        migrations.CreateModel(
            name='ExitIntentTrigger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('trigger_type', models.CharField(choices=[('exit_intent', 'Exit Intent'), ('scroll_depth', 'Scroll Depth'), ('time_on_page', 'Time on Page'), ('inactivity', 'Inactivity'), ('click_pattern', 'Click Pattern'), ('form_abandonment', 'Form Abandonment')], max_length=50)),
                ('trigger_conditions', models.JSONField(default=dict, help_text='Trigger conditions')),
                ('action_type', models.CharField(choices=[('popup_modal', 'Popup Modal'), ('slide_in', 'Slide-in Banner'), ('top_bar', 'Top Bar Notification'), ('overlay', 'Full Screen Overlay'), ('redirect', 'Page Redirect'), ('email_capture', 'Email Capture'), ('discount_offer', 'Discount Offer'), ('content_gate', 'Content Gate')], max_length=50)),
                ('action_config', models.JSONField(default=dict, help_text='Action configuration')),
                ('headline', models.CharField(blank=True, max_length=200)),
                ('message', models.TextField(blank=True)),
                ('cta_text', models.CharField(blank=True, max_length=100)),
                ('offer_details', models.JSONField(default=dict)),
                ('audience_segments', models.JSONField(default=list)),
                ('device_targeting', models.JSONField(default=dict)),
                ('frequency_cap', models.IntegerField(default=1, help_text='Max times to show per user')),
                ('cooldown_period', models.IntegerField(default=24, help_text='Hours between triggers')),
                ('triggers_fired', models.IntegerField(default=0)),
                ('conversions', models.IntegerField(default=0)),
                ('conversion_rate', models.FloatField(default=0.0)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('target_pages', models.ManyToManyField(blank=True, to='marketing.landingpage')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ConversionOptimization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('experiment_type', models.CharField(choices=[('ab_test', 'A/B Test'), ('multivariate', 'Multivariate Test'), ('split_url', 'Split URL Test'), ('redirect', 'Redirect Test'), ('personalization', 'Personalization')], max_length=50)),
                ('hypothesis', models.TextField(help_text="What we're testing and why")),
                ('target_elements', models.JSONField(default=list, help_text='Elements being tested')),
                ('variations', models.JSONField(default=list, help_text='Test variations')),
                ('traffic_allocation', models.JSONField(default=dict, help_text='Traffic split')),
                ('primary_metric', models.CharField(max_length=100)),
                ('secondary_metrics', models.JSONField(default=list)),
                ('minimum_detectable_effect', models.FloatField(default=5.0, help_text='Minimum % improvement to detect')),
                ('status', models.CharField(choices=[('hypothesis', 'Hypothesis'), ('testing', 'Testing'), ('winner', 'Winner Found'), ('inconclusive', 'Inconclusive'), ('failed', 'Failed')], default='hypothesis', max_length=20)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('duration_days', models.IntegerField(default=14)),
                ('winning_variation', models.CharField(blank=True, max_length=50)),
                ('confidence_level', models.FloatField(default=0.0)),
                ('improvement_percentage', models.FloatField(default=0.0)),
                ('statistical_significance', models.BooleanField(default=False)),
                ('implemented', models.BooleanField(default=False)),
                ('implementation_date', models.DateTimeField(blank=True, null=True)),
                ('estimated_impact', models.JSONField(default=dict, help_text='Estimated business impact')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conversion_optimizations', to=settings.AUTH_USER_MODEL)),
                ('target_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='optimizations', to='marketing.landingpage')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddConstraint(
            model_name='pagevariant',
            constraint=models.UniqueConstraint(fields=('landing_page', 'variant_key'), name='unique_page_variant'),
        ),
        migrations.AddConstraint(
            model_name='funnelstep',
            constraint=models.UniqueConstraint(fields=('funnel', 'step_number'), name='unique_funnel_step'),
        ),
    ]