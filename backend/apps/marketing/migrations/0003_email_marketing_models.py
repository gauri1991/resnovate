# Generated migration for email marketing models

from django.db import migrations, models
import django.db.models.deletion
from django.conf import settings
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('marketing', '0001_initial'),
        ('leads', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailSequence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('trigger_event', models.CharField(choices=[('form_fill', 'Form Submission'), ('download', 'Content Download'), ('page_visit', 'Page Visit'), ('email_open', 'Email Opened'), ('link_click', 'Link Clicked'), ('score_threshold', 'Lead Score Threshold'), ('time_based', 'Time-Based Trigger'), ('behavior_based', 'Behavioral Trigger'), ('engagement_drop', 'Engagement Drop'), ('milestone', 'Customer Milestone')], max_length=100)),
                ('target_segment', models.JSONField(default=dict, help_text='Target audience segment criteria')),
                ('personalization_rules', models.JSONField(default=dict, help_text='Dynamic personalization rules')),
                ('emails', models.JSONField(default=list, help_text='Array of email configurations in sequence')),
                ('delay_between_emails', models.JSONField(default=dict, help_text='Delay configuration between emails')),
                ('send_time_optimization', models.BooleanField(default=True, help_text='AI-optimized send times')),
                ('frequency_cap', models.IntegerField(default=1, help_text='Max emails per day')),
                ('exclude_weekends', models.BooleanField(default=False)),
                ('timezone_aware', models.BooleanField(default=True)),
                ('ab_testing_enabled', models.BooleanField(default=False)),
                ('test_variants', models.JSONField(default=list)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('active', models.BooleanField(default=True)),
                ('total_sent', models.IntegerField(default=0)),
                ('total_opened', models.IntegerField(default=0)),
                ('total_clicked', models.IntegerField(default=0)),
                ('total_conversions', models.IntegerField(default=0)),
                ('total_unsubscribes', models.IntegerField(default=0)),
                ('open_rate', models.FloatField(default=0.0)),
                ('click_rate', models.FloatField(default=0.0)),
                ('conversion_rate', models.FloatField(default=0.0)),
                ('unsubscribe_rate', models.FloatField(default=0.0)),
                ('revenue_generated', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='email_sequences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('template_type', models.CharField(choices=[('welcome', 'Welcome Email'), ('nurture', 'Nurture Email'), ('educational', 'Educational Content'), ('promotional', 'Promotional'), ('transactional', 'Transactional'), ('re_engagement', 'Re-engagement'), ('newsletter', 'Newsletter'), ('invitation', 'Event Invitation'), ('follow_up', 'Follow-up')], max_length=50)),
                ('subject_line_variants', models.JSONField(default=list, help_text='Multiple subject line variants for testing')),
                ('preheader_text', models.CharField(blank=True, max_length=200)),
                ('from_name', models.CharField(default='Resnovate AI Team', max_length=100)),
                ('from_email', models.EmailField(default='hello@resnovate.ai')),
                ('reply_to', models.EmailField(blank=True)),
                ('content_blocks', models.JSONField(default=dict, help_text='Modular content blocks')),
                ('html_template', models.TextField(help_text='HTML email template')),
                ('text_template', models.TextField(help_text='Plain text version')),
                ('personalization_fields', models.JSONField(default=list, help_text='Dynamic personalization fields')),
                ('dynamic_content_rules', models.JSONField(default=dict, help_text='Rules for dynamic content')),
                ('industry_specific', models.CharField(blank=True, max_length=100)),
                ('persona_specific', models.CharField(blank=True, max_length=100)),
                ('funnel_stage', models.CharField(blank=True, max_length=50)),
                ('ai_generated', models.BooleanField(default=False)),
                ('ai_prompts', models.JSONField(default=dict, help_text='AI prompts for content generation')),
                ('usage_count', models.IntegerField(default=0)),
                ('avg_open_rate', models.FloatField(default=0.0)),
                ('avg_click_rate', models.FloatField(default=0.0)),
                ('avg_conversion_rate', models.FloatField(default=0.0)),
                ('performance_score', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-performance_score', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BehavioralTrigger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('trigger_type', models.CharField(choices=[('page_visit', 'Page Visit'), ('time_on_site', 'Time on Site'), ('pages_viewed', 'Pages Viewed'), ('form_abandonment', 'Form Abandonment'), ('cart_abandonment', 'Cart Abandonment'), ('email_engagement', 'Email Engagement'), ('content_download', 'Content Download'), ('video_watch', 'Video Watch'), ('webinar_attendance', 'Webinar Attendance'), ('score_change', 'Lead Score Change'), ('inactivity', 'Period of Inactivity'), ('milestone', 'Milestone Reached')], max_length=50)),
                ('conditions', models.JSONField(help_text='Trigger conditions and rules')),
                ('action_type', models.CharField(choices=[('send_email', 'Send Email'), ('send_sms', 'Send SMS'), ('create_task', 'Create Task'), ('notify_sales', 'Notify Sales'), ('update_score', 'Update Lead Score'), ('add_to_list', 'Add to List'), ('remove_from_list', 'Remove from List'), ('start_sequence', 'Start Email Sequence'), ('stop_sequence', 'Stop Email Sequence'), ('update_field', 'Update Contact Field'), ('webhook', 'Call Webhook')], max_length=50)),
                ('action_config', models.JSONField(help_text='Action configuration details')),
                ('delay', models.DurationField(blank=True, help_text='Delay before triggering action', null=True)),
                ('segment_criteria', models.JSONField(default=dict, help_text='Lead segment criteria')),
                ('priority', models.IntegerField(default=0, help_text='Higher priority triggers execute first')),
                ('max_triggers_per_lead', models.IntegerField(default=0, help_text='0 for unlimited')),
                ('cooldown_period', models.DurationField(blank=True, help_text='Minimum time between triggers', null=True)),
                ('active', models.BooleanField(default=True)),
                ('times_triggered', models.IntegerField(default=0)),
                ('successful_actions', models.IntegerField(default=0)),
                ('failed_actions', models.IntegerField(default=0)),
                ('conversion_rate', models.FloatField(default=0.0)),
                ('revenue_attributed', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email_sequence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='marketing.emailsequence')),
                ('email_template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='marketing.emailtemplate')),
            ],
            options={
                'ordering': ['-priority', '-times_triggered'],
            },
        ),
        migrations.CreateModel(
            name='EmailEngagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sent_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('opened_at', models.DateTimeField(blank=True, null=True)),
                ('clicked_at', models.DateTimeField(blank=True, null=True)),
                ('unsubscribed_at', models.DateTimeField(blank=True, null=True)),
                ('bounced', models.BooleanField(default=False)),
                ('bounce_type', models.CharField(blank=True, max_length=50)),
                ('clicks_count', models.IntegerField(default=0)),
                ('clicked_links', models.JSONField(default=list)),
                ('email_client', models.CharField(blank=True, max_length=100)),
                ('device_type', models.CharField(blank=True, max_length=50)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('location', models.JSONField(blank=True, default=dict)),
                ('converted', models.BooleanField(default=False)),
                ('conversion_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('conversion_date', models.DateTimeField(blank=True, null=True)),
                ('email_sequence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='engagements', to='marketing.emailsequence')),
                ('email_template', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='marketing.emailtemplate')),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_engagements', to='leads.lead')),
            ],
            options={
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailAutomationRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('if_conditions', models.JSONField(help_text='IF conditions for the rule')),
                ('then_actions', models.JSONField(help_text='THEN actions to execute')),
                ('else_actions', models.JSONField(default=dict, help_text='ELSE actions (optional)')),
                ('applies_to_all', models.BooleanField(default=False)),
                ('execution_order', models.IntegerField(default=0)),
                ('stop_on_match', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
                ('times_evaluated', models.IntegerField(default=0)),
                ('times_matched', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('applies_to_sequences', models.ManyToManyField(blank=True, to='marketing.emailsequence')),
            ],
            options={
                'ordering': ['execution_order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailABTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('test_element', models.CharField(help_text='What element is being tested', max_length=100)),
                ('variant_a', models.JSONField(help_text='Variant A configuration')),
                ('variant_b', models.JSONField(help_text='Variant B configuration')),
                ('variant_c', models.JSONField(blank=True, help_text='Optional Variant C', null=True)),
                ('traffic_split', models.JSONField(default=dict, help_text='Traffic split percentages')),
                ('sample_size', models.IntegerField(help_text='Minimum sample size for significance')),
                ('status', models.CharField(default='running', max_length=20)),
                ('started_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('variant_a_sent', models.IntegerField(default=0)),
                ('variant_a_opens', models.IntegerField(default=0)),
                ('variant_a_clicks', models.IntegerField(default=0)),
                ('variant_a_conversions', models.IntegerField(default=0)),
                ('variant_b_sent', models.IntegerField(default=0)),
                ('variant_b_opens', models.IntegerField(default=0)),
                ('variant_b_clicks', models.IntegerField(default=0)),
                ('variant_b_conversions', models.IntegerField(default=0)),
                ('variant_c_sent', models.IntegerField(blank=True, default=0, null=True)),
                ('variant_c_opens', models.IntegerField(blank=True, default=0, null=True)),
                ('variant_c_clicks', models.IntegerField(blank=True, default=0, null=True)),
                ('variant_c_conversions', models.IntegerField(blank=True, default=0, null=True)),
                ('confidence_level', models.FloatField(default=0.0)),
                ('statistical_significance', models.BooleanField(default=False)),
                ('winning_variant', models.CharField(blank=True, max_length=10)),
                ('email_sequence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ab_tests', to='marketing.emailsequence')),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.AddConstraint(
            model_name='emailengagement',
            constraint=models.UniqueConstraint(fields=('email_sequence', 'lead', 'email_template', 'sent_at'), name='unique_email_engagement'),
        ),
    ]