# Generated migration for Marketing models

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from django.utils import timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MarketingCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('campaign_type', models.CharField(choices=[('content', 'Content Marketing'), ('email', 'Email Marketing'), ('social', 'Social Media'), ('paid_search', 'Paid Search'), ('paid_social', 'Paid Social'), ('display', 'Display Advertising'), ('retargeting', 'Retargeting'), ('automation', 'Marketing Automation'), ('seo', 'SEO Content'), ('webinar', 'Webinar'), ('video', 'Video Marketing')], max_length=50)),
                ('objective', models.CharField(choices=[('awareness', 'Brand Awareness'), ('lead_generation', 'Lead Generation'), ('conversion', 'Conversion'), ('retention', 'Customer Retention'), ('upsell', 'Upsell/Cross-sell'), ('reactivation', 'Reactivation')], max_length=50)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('target_audience', models.JSONField(default=dict, help_text='Audience targeting criteria')),
                ('target_keywords', models.JSONField(default=list, help_text='Target keywords for SEO/SEM')),
                ('target_personas', models.JSONField(default=list, help_text='Target buyer personas')),
                ('geographic_targeting', models.JSONField(default=dict, help_text='Geographic targeting settings')),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('budget', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('daily_budget', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('spent', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('target_cpa', models.DecimalField(blank=True, decimal_places=2, help_text='Target Cost Per Acquisition', max_digits=10, null=True)),
                ('target_roas', models.FloatField(blank=True, help_text='Target Return on Ad Spend', null=True)),
                ('channels', models.JSONField(default=list, help_text='Marketing channels used in this campaign')),
                ('channel_allocation', models.JSONField(default=dict, help_text='Budget allocation across channels')),
                ('content_templates', models.JSONField(default=list, help_text='Content templates used')),
                ('creative_assets', models.JSONField(default=list, help_text='Creative assets and media')),
                ('messaging_variants', models.JSONField(default=list, help_text='Different messaging variants')),
                ('ai_optimization_enabled', models.BooleanField(default=False)),
                ('auto_bidding', models.BooleanField(default=False)),
                ('auto_targeting', models.BooleanField(default=False)),
                ('ai_content_generation', models.BooleanField(default=False)),
                ('optimization_goal', models.CharField(blank=True, max_length=100)),
                ('ab_testing_enabled', models.BooleanField(default=False)),
                ('ab_test_variants', models.JSONField(default=list, help_text='A/B test variants configuration')),
                ('traffic_split', models.JSONField(default=dict, help_text='Traffic split between variants')),
                ('attribution_model', models.CharField(default='last_touch', max_length=50)),
                ('conversion_tracking', models.JSONField(default=dict, help_text='Conversion tracking setup')),
                ('utm_parameters', models.JSONField(default=dict, help_text='UTM tracking parameters')),
                ('impressions', models.BigIntegerField(default=0)),
                ('clicks', models.IntegerField(default=0)),
                ('leads_generated', models.IntegerField(default=0)),
                ('conversions', models.IntegerField(default=0)),
                ('revenue_generated', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('click_through_rate', models.FloatField(default=0.0)),
                ('conversion_rate', models.FloatField(default=0.0)),
                ('cost_per_click', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('cost_per_lead', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('cost_per_acquisition', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('return_on_ad_spend', models.FloatField(default=0.0)),
                ('ai_performance_score', models.IntegerField(default=0, help_text='AI-calculated performance score (0-100)')),
                ('optimization_suggestions', models.JSONField(default=list, help_text='AI-generated optimization suggestions')),
                ('predicted_performance', models.JSONField(default=dict, help_text='AI-predicted performance metrics')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_campaigns', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ContentTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('content_type', models.CharField(choices=[('blog', 'Blog Post'), ('email', 'Email'), ('social', 'Social Media Post'), ('ad_copy', 'Ad Copy'), ('landing_page', 'Landing Page'), ('case_study', 'Case Study'), ('whitepaper', 'Whitepaper'), ('webinar', 'Webinar'), ('video_script', 'Video Script')], max_length=50)),
                ('industry', models.CharField(blank=True, max_length=100)),
                ('persona', models.CharField(blank=True, max_length=100)),
                ('stage', models.CharField(choices=[('awareness', 'Awareness'), ('consideration', 'Consideration'), ('decision', 'Decision'), ('retention', 'Retention'), ('advocacy', 'Advocacy')], max_length=50)),
                ('template_content', models.TextField()),
                ('ai_prompts', models.JSONField(default=dict, help_text='AI prompts for content generation')),
                ('variables', models.JSONField(default=list, help_text='Template variables for personalization')),
                ('usage_count', models.IntegerField(default=0)),
                ('performance_metrics', models.JSONField(default=dict)),
                ('average_engagement', models.FloatField(default=0.0)),
                ('average_conversion_rate', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-usage_count', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SocialMediaCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('platform', models.CharField(choices=[('linkedin', 'LinkedIn'), ('twitter', 'Twitter/X'), ('facebook', 'Facebook'), ('instagram', 'Instagram'), ('youtube', 'YouTube'), ('tiktok', 'TikTok')], max_length=50)),
                ('campaign_type', models.CharField(choices=[('organic', 'Organic'), ('paid', 'Paid'), ('sponsored', 'Sponsored Content'), ('influencer', 'Influencer')], max_length=50)),
                ('target_audience', models.JSONField(default=dict)),
                ('content_schedule', models.JSONField(default=dict)),
                ('posting_frequency', models.JSONField(default=dict)),
                ('budget', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('impressions', models.BigIntegerField(default=0)),
                ('reach', models.IntegerField(default=0)),
                ('clicks', models.IntegerField(default=0)),
                ('engagements', models.IntegerField(default=0)),
                ('shares', models.IntegerField(default=0)),
                ('comments', models.IntegerField(default=0)),
                ('likes', models.IntegerField(default=0)),
                ('leads_generated', models.IntegerField(default=0)),
                ('cost_per_lead', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('engagement_rate', models.FloatField(default=0.0)),
                ('conversion_rate', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_campaigns', to='marketing.marketingcampaign')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaidCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('platform', models.CharField(choices=[('google_ads', 'Google Ads'), ('linkedin_ads', 'LinkedIn Ads'), ('facebook_ads', 'Facebook Ads'), ('microsoft_ads', 'Microsoft Ads'), ('twitter_ads', 'Twitter Ads'), ('youtube_ads', 'YouTube Ads')], max_length=50)),
                ('campaign_type', models.CharField(choices=[('search', 'Search'), ('display', 'Display'), ('video', 'Video'), ('shopping', 'Shopping'), ('social', 'Social'), ('retargeting', 'Retargeting')], max_length=50)),
                ('target_audience', models.JSONField(default=dict)),
                ('keywords', models.JSONField(default=list)),
                ('ad_groups', models.JSONField(default=list)),
                ('geographic_targeting', models.JSONField(default=dict)),
                ('demographic_targeting', models.JSONField(default=dict)),
                ('daily_budget', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_budget', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('target_cpa', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('target_roas', models.FloatField(blank=True, null=True)),
                ('bid_strategy', models.CharField(default='maximize_conversions', max_length=100)),
                ('auto_bidding', models.BooleanField(default=True)),
                ('auto_keyword_expansion', models.BooleanField(default=True)),
                ('auto_audience_expansion', models.BooleanField(default=False)),
                ('performance_threshold', models.JSONField(default=dict)),
                ('impressions', models.BigIntegerField(default=0)),
                ('clicks', models.IntegerField(default=0)),
                ('conversions', models.IntegerField(default=0)),
                ('spend', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paid_campaigns', to='marketing.marketingcampaign')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CampaignPerformanceMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('channel', models.CharField(max_length=100)),
                ('sessions', models.IntegerField(default=0)),
                ('users', models.IntegerField(default=0)),
                ('page_views', models.IntegerField(default=0)),
                ('bounce_rate', models.FloatField(default=0.0)),
                ('session_duration', models.DurationField(null=True)),
                ('impressions', models.BigIntegerField(default=0)),
                ('clicks', models.IntegerField(default=0)),
                ('click_through_rate', models.FloatField(default=0.0)),
                ('engagement_rate', models.FloatField(default=0.0)),
                ('leads_generated', models.IntegerField(default=0)),
                ('mqls', models.IntegerField(default=0)),
                ('sqls', models.IntegerField(default=0)),
                ('opportunities', models.IntegerField(default=0)),
                ('closed_deals', models.IntegerField(default=0)),
                ('spend', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('cost_per_lead', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('cost_per_acquisition', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('return_on_ad_spend', models.FloatField(default=0.0)),
                ('first_touch_attribution', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('last_touch_attribution', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('linear_attribution', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_metrics', to='marketing.marketingcampaign')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='CampaignOrchestration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('channels', models.JSONField(help_text='Channels included in orchestration')),
                ('campaign_timeline', models.JSONField(help_text='Timeline across channels')),
                ('budget_allocation', models.JSONField(help_text='Budget allocation across channels')),
                ('success_metrics', models.JSONField(help_text='Success metrics for each channel')),
                ('message_consistency_rules', models.JSONField(default=dict)),
                ('frequency_capping', models.JSONField(default=dict, help_text='Frequency caps across channels')),
                ('cross_channel_attribution', models.CharField(default='linear', max_length=50)),
                ('status', models.CharField(default='planning', max_length=20)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orchestrations', to='marketing.marketingcampaign')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddConstraint(
            model_name='campaignperformancemetrics',
            constraint=models.UniqueConstraint(fields=('campaign', 'date', 'channel'), name='unique_campaign_date_channel'),
        ),
    ]